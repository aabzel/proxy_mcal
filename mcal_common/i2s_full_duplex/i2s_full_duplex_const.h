#ifndef I2S_FULL_DUPLEX_CONST_H
#define I2S_FULL_DUPLEX_CONST_H


#include "i2s_full_duplex_dep.h"

/*in channels, One I2S sample is equals to 2 channels*/
#define I2S_COMMON_BUFFER_SAMPLE_CNT (1024)
#define I2S_COMMON_BUFFER_CHANNELS_CNT (2*I2S_COMMON_BUFFER_SAMPLE_CNT)
#define I2S_FULL_DUPLEX_POLL_PERIOD_US 100000

typedef enum {
    I2S_FULL_DUPLEX_STATE_UNDEF = 0,
    I2S_FULL_DUPLEX_STATE_IDLE = 1,
    I2S_FULL_DUPLEX_STATE_TX = 2,
    I2S_FULL_DUPLEX_STATE_RX = 3,
    I2S_FULL_DUPLEX_STATE_RX_TX = 4,
} I2sFullDuplexState_t;

typedef enum {
    I2S_FULL_DUPLEX_INPUTS_UNDEF = 0,
    I2S_FULL_DUPLEX_INPUTS_RX_HALF = 1,
    I2S_FULL_DUPLEX_INPUTS_RX_DONE= 2,
    I2S_FULL_DUPLEX_INPUTS_TX_HALF = 3,
    I2S_FULL_DUPLEX_INPUTS_TX_DONE = 4,
    I2S_FULL_DUPLEX_INPUTS_START= 5,
    I2S_FULL_DUPLEX_INPUTS_STOP = 6,
} I2sFullDuplexInputs_t;


#endif /* I2S_FULL_DUPLEX_CONST_H */
